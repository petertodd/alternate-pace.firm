gpasm-0.13.4 beta               user.asm    6-24-2008  22:20:40          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00001 ;--------------------------------------------------------
               00002 ; File Created by SDCC : FreeWare ANSI-C Compiler
               00003 ; Version 2.6.0 #4309 (Sep 23 2007)
               00004 ; This file generated Tue Jun 24 22:20:40 2008
               00005 ;--------------------------------------------------------
               00006 ; PIC16 port for the Microchip 16-bit core micros
               00007 ;--------------------------------------------------------
               00008         list    p=18f1320
               00009 
               00010         radix dec
               00011 
               00012 ;--------------------------------------------------------
               00013 ; public variables in this module
               00014 ;--------------------------------------------------------
               00015         global _init_user
               00016         global _do_user
               00017         global _mode
               00018         global _silly_hour_display
               00019         global _display_time
               00020         global _check_for_keypresses
               00021         global _check_brightness
               00022 
               00023 ;--------------------------------------------------------
               00024 ; extern variables in this module
               00025 ;--------------------------------------------------------
               00026         extern __gptrget1
               00027         extern __moduchar
               00028         extern _PORTAbits
               00029         extern _PORTBbits
               00030         extern _LATAbits
               00031         extern _LATBbits
               00032         extern _TRISAbits
               00033         extern _TRISBbits
               00034         extern _PIE1bits
               00035         extern _PIR1bits
               00036         extern _IPR1bits
               00037         extern _PIE2bits
               00038         extern _PIR2bits
               00039         extern _IPR2bits
               00040         extern _EECON1bits
               00041         extern _RCSTAbits
               00042         extern _TXSTAbits
               00043         extern _T3CONbits
               00044         extern _ECCPASbits
               00045         extern _CCP1CONbits
               00046         extern _ADCON2bits
               00047         extern _ADCON1bits
               00048         extern _ADCON0bits
               00049         extern _T2CONbits
               00050         extern _T1CONbits
               00051         extern _RCONbits
               00052         extern _WDTCONbits
               00053         extern _LVDCONbits
               00054         extern _OSCCONbits
gpasm-0.13.4 beta               user.asm    6-24-2008  22:20:40          PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00055         extern _STATUSbits
               00056         extern _INTCON3bits
               00057         extern _INTCON2bits
               00058         extern _INTCONbits
               00059         extern _STKPTRbits
               00060         extern _time_tics
               00061         extern _time_secs
               00062         extern _time_mins
               00063         extern _time_hours
               00064         extern _dot1
               00065         extern _eeprom_data
               00066         extern _PORTA
               00067         extern _PORTB
               00068         extern _LATA
               00069         extern _LATB
               00070         extern _TRISA
               00071         extern _TRISB
               00072         extern _PIE1
               00073         extern _PIR1
               00074         extern _IPR1
               00075         extern _PIE2
               00076         extern _PIR2
               00077         extern _IPR2
               00078         extern _EECON1
               00079         extern _EECON2
               00080         extern _EEDATA
               00081         extern _EEADR
               00082         extern _BAUDCTL
               00083         extern _RCSTA
               00084         extern _TXSTA
               00085         extern _TXREG
               00086         extern _RCREG
               00087         extern _SPBRG
               00088         extern _SPBRGH
               00089         extern _T3CON
               00090         extern _TMR3L
               00091         extern _TMR3H
               00092         extern _ECCPAS
               00093         extern _CCP1CON
               00094         extern _CCPR1L
               00095         extern _CCPR1H
               00096         extern _ADCON2
               00097         extern _ADCON1
               00098         extern _ADCON0
               00099         extern _ADRESL
               00100         extern _ADRESH
               00101         extern _T2CON
               00102         extern _PR2
               00103         extern _TMR2
               00104         extern _T1CON
               00105         extern _TMR1L
               00106         extern _TMR1H
               00107         extern _RCON
               00108         extern _WDTCON
gpasm-0.13.4 beta               user.asm    6-24-2008  22:20:40          PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00109         extern _LVDCON
               00110         extern _OSCCON
               00111         extern _T0CON
               00112         extern _TMR0L
               00113         extern _TMR0H
               00114         extern _STATUS
               00115         extern _FSR2L
               00116         extern _FSR2H
               00117         extern _PLUSW2
               00118         extern _PREINC2
               00119         extern _POSTDEC2
               00120         extern _POSTINC2
               00121         extern _INDF2
               00122         extern _BSR
               00123         extern _FSR1L
               00124         extern _FSR1H
               00125         extern _PLUSW1
               00126         extern _PREINC1
               00127         extern _POSTDEC1
               00128         extern _POSTINC1
               00129         extern _INDF1
               00130         extern _WREG
               00131         extern _FSR0L
               00132         extern _FSR0H
               00133         extern _PLUSW0
               00134         extern _PREINC0
               00135         extern _POSTDEC0
               00136         extern _POSTINC0
               00137         extern _INDF0
               00138         extern _INTCON3
               00139         extern _INTCON2
               00140         extern _INTCON
               00141         extern _PRODL
               00142         extern _PRODH
               00143         extern _TABLAT
               00144         extern _TBLPTRL
               00145         extern _TBLPTRH
               00146         extern _TBLPTRU
               00147         extern _PCL
               00148         extern _PCLATH
               00149         extern _PCLATU
               00150         extern _STKPTR
               00151         extern _TOSL
               00152         extern _TOSH
               00153         extern _TOSU
               00154         extern _delay10tcy
               00155         extern _inc_hours
               00156         extern _dec_hours
               00157         extern _inc_mins
               00158         extern _clear_secs
               00159         extern _init_display
               00160         extern _display_digits_real
               00161         extern _trigger_save_eeprom
               00162         extern _save_eeprom_fully
gpasm-0.13.4 beta               user.asm    6-24-2008  22:20:40          PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00163         extern _to_bcd
               00164 ;--------------------------------------------------------
               00165 ;       Equates to used internal registers
               00166 ;--------------------------------------------------------
  00000FD8     00167 STATUS  equ     0xfd8
  00000FE8     00168 WREG    equ     0xfe8
  00000FE9     00169 FSR0L   equ     0xfe9
  00000FE1     00170 FSR1L   equ     0xfe1
  00000FD9     00171 FSR2L   equ     0xfd9
  00000FE5     00172 POSTDEC1        equ     0xfe5
  00000FE4     00173 PREINC1 equ     0xfe4
  00000FF3     00174 PRODL   equ     0xff3
               00175 
               00176 
               00177 ; Internal registers
               00178 .registers      udata_ovr       0x0000
               00179 r0x00   res     1
               00180 r0x01   res     1
               00181 r0x02   res     1
               00182 r0x03   res     1
               00183 r0x04   res     1
               00184 r0x05   res     1
               00185 r0x06   res     1
               00186 
               00187 udata_user_0    udata
               00188 _hours_debounce res     2
               00189 
               00190 udata_user_1    udata
               00191 _mins_debounce  res     2
               00192 
               00193 udata_user_2    udata
               00194 _secs_debounce  res     2
               00195 
               00196 udata_user_3    udata
               00197 _mode   res     1
               00198 
               00199 udata_user_4    udata
               00200 _silly_hour_display     res     1
               00201 
               00202 ;--------------------------------------------------------
               00203 ; global & static initialisations
               00204 ;--------------------------------------------------------
               00205 ; I code from now on!
               00206 ; ; Starting pCode block
               00207 S_user__do_user code
0000           00208 _do_user:
               00209 ;       .line   215; user.c     check_brightness();
0000 EC00 F000 00210         CALL    _check_brightness
               00211 ;       .line   216; user.c     check_for_keypresses();
0004 EC00 F000 00212         CALL    _check_for_keypresses
               00213 ;       .line   217; user.c     display_time();
0008 EC00 F000 00214         CALL    _display_time
000C 0012      00215         RETURN  
               00216 
gpasm-0.13.4 beta               user.asm    6-24-2008  22:20:40          PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00217 ; ; Starting pCode block
               00218 S_user__check_brightness        code
0000           00219 _check_brightness:
               00220 ;       .line   209; user.c     ADCON0bits.GO = 1;
0000 8200      00221         BSF     _ADCON0bits, 1
0002           00222 _00293_DS_:
               00223 ;       .line   210; user.c     while (ADCON0bits.GO);
0002 B200      00224         BTFSC   _ADCON0bits, 1
0004 D000      00225         BRA     _00293_DS_
               00226 ;       .line   211; user.c     CCPR1L = ADRESH;
0006 C000 F000 00227         MOVFF   _ADRESH, _CCPR1L
000A 0012      00228         RETURN  
               00229 
               00230 ; ; Starting pCode block
               00231 S_user__check_for_keypresses    code
0000           00232 _check_for_keypresses:
               00233 ;       .line   178; user.c     void check_for_keypresses(){
0000 C000 FFE5 00234         MOVFF   r0x00, POSTDEC1
0004 C000 FFE5 00235         MOVFF   r0x01, POSTDEC1
0008 C000 FFE5 00236         MOVFF   r0x02, POSTDEC1
000C C000 FFE5 00237         MOVFF   r0x03, POSTDEC1
               00238 ;       .line   180; user.c     if (debounce_just_pressed(hours_debounce,hours_switch_raw)){
0010 B400      00239         BTFSC   _PORTBbits, 2
0012 D000      00240         BRA     _00226_DS_
0014 0E7C      00241         MOVLW   0x7c
0016 0000      00242         BANKSEL _hours_debounce
0018 5D00      00243         SUBWF   _hours_debounce, W, B
001A E200      00244         BC      _00226_DS_
001C 6A00      00245         CLRF    r0x00
001E B400      00246         BTFSC   _PORTBbits, 2
0020 2A00      00247         INCF    r0x00, F
0022 5000      00248         MOVF    r0x00, W
0024 80D8      00249         BSF     STATUS, 0
0026 66E8      00250         TSTFSZ  WREG
0028 90D8      00251         BCF     STATUS, 0
002A 6A00      00252         CLRF    r0x00
002C 3600      00253         RLCF    r0x00, F
               00254 ; removed redundant BANKSEL
002E 5100      00255         MOVF    (_hours_debounce + 1), W, B
0030 1800      00256         XORWF   r0x00, W
0032 E000      00257         BZ      _00226_DS_
               00258 ;       .line   181; user.c     inc_hours();
0034 EC00 F000 00259         CALL    _inc_hours
               00260 ;       .line   182; user.c     inc_metric_sw_hours();
0038 C000 F000 00261         MOVFF   (_eeprom_data + 4), r0x00
003C C000 F000 00262         MOVFF   (_eeprom_data + 5), r0x01
0040 C000 F000 00263         MOVFF   (_eeprom_data + 6), r0x02
0044 C000 F000 00264         MOVFF   (_eeprom_data + 7), r0x03
0048 2A00      00265         INCF    r0x00, F
004A B0D8      00266         BTFSC   STATUS, 0
004C 2A00      00267         INCF    r0x01, F
004E B0D8      00268         BTFSC   STATUS, 0
0050 2A00      00269         INCF    r0x02, F
0052 B0D8      00270         BTFSC   STATUS, 0
gpasm-0.13.4 beta               user.asm    6-24-2008  22:20:40          PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0054 2A00      00271         INCF    r0x03, F
0056 5000      00272         MOVF    r0x00, W
0058 0000      00273         BANKSEL (_eeprom_data + 4)
005A 6F00      00274         MOVWF   (_eeprom_data + 4), B
005C 5000      00275         MOVF    r0x01, W
               00276 ; removed redundant BANKSEL
005E 6F00      00277         MOVWF   (_eeprom_data + 5), B
0060 5000      00278         MOVF    r0x02, W
               00279 ; removed redundant BANKSEL
0062 6F00      00280         MOVWF   (_eeprom_data + 6), B
0064 5000      00281         MOVF    r0x03, W
               00282 ; removed redundant BANKSEL
0066 6F00      00283         MOVWF   (_eeprom_data + 7), B
0068 EC00 F000 00284         CALL    _trigger_save_eeprom
006C D000      00285         BRA     _00227_DS_
006E           00286 _00226_DS_:
006E 0000      00287         BANKSEL _hours_debounce
               00288 ;       .line   183; user.c     } else if (debounce_held_down(hours_debounce,hours_switch_raw)) {
0070 5100      00289         MOVF    _hours_debounce, W, B
0072 0A01      00290         XORLW   0x01
0074 E100      00291         BNZ     _00227_DS_
0076 6A00      00292         CLRF    r0x00
0078 B400      00293         BTFSC   _PORTBbits, 2
007A 2A00      00294         INCF    r0x00, F
007C 5000      00295         MOVF    r0x00, W
007E 80D8      00296         BSF     STATUS, 0
0080 66E8      00297         TSTFSZ  WREG
0082 90D8      00298         BCF     STATUS, 0
0084 6A00      00299         CLRF    r0x00
0086 3600      00300         RLCF    r0x00, F
0088 5000      00301         MOVF    r0x00, W
008A 0A01      00302         XORLW   0x01
008C E100      00303         BNZ     _00227_DS_
008E           00304 _00275_DS_:
008E 0000      00305         BANKSEL _silly_hour_display
               00306 ;       .line   184; user.c     silly_hour_display = !silly_hour_display;
0090 5100      00307         MOVF    _silly_hour_display, W, B
0092 80D8      00308         BSF     STATUS, 0
0094 66E8      00309         TSTFSZ  WREG
0096 90D8      00310         BCF     STATUS, 0
               00311 ; removed redundant BANKSEL
0098 6B00      00312         CLRF    _silly_hour_display, B
009A 3700      00313         RLCF    _silly_hour_display, F, B
               00314 ;       .line   185; user.c     eeprom_write_uint32(silly_hour_display,EEPROM_ADDR_SILLY_HOUR_DISPLAY);
009C C000 F000 00315         MOVFF   _silly_hour_display, r0x00
00A0 6A00      00316         CLRF    r0x01
00A2 6A00      00317         CLRF    r0x02
00A4 6A00      00318         CLRF    r0x03
00A6 5000      00319         MOVF    r0x00, W
00A8 0000      00320         BANKSEL (_eeprom_data + 32)
00AA 6F00      00321         MOVWF   (_eeprom_data + 32), B
00AC 5000      00322         MOVF    r0x01, W
               00323 ; removed redundant BANKSEL
00AE 6F00      00324         MOVWF   (_eeprom_data + 33), B
gpasm-0.13.4 beta               user.asm    6-24-2008  22:20:40          PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00B0 5000      00325         MOVF    r0x02, W
               00326 ; removed redundant BANKSEL
00B2 6F00      00327         MOVWF   (_eeprom_data + 34), B
00B4 5000      00328         MOVF    r0x03, W
               00329 ; removed redundant BANKSEL
00B6 6F00      00330         MOVWF   (_eeprom_data + 35), B
               00331 ;       .line   186; user.c     trigger_save_eeprom();
00B8 EC00 F000 00332         CALL    _trigger_save_eeprom
               00333 ;       .line   189; user.c     dec_hours();
00BC EC00 F000 00334         CALL    _dec_hours
00C0           00335 _00227_DS_:
               00336 ;       .line   192; user.c     if (debounce_just_pressed(mins_debounce,mins_switch_raw)){
00C0 BC00      00337         BTFSC   _PORTAbits, 6
00C2 D000      00338         BRA     _00231_DS_
00C4 0E7C      00339         MOVLW   0x7c
00C6 0000      00340         BANKSEL _mins_debounce
00C8 5D00      00341         SUBWF   _mins_debounce, W, B
00CA E200      00342         BC      _00231_DS_
00CC 6A00      00343         CLRF    r0x00
00CE BC00      00344         BTFSC   _PORTAbits, 6
00D0 2A00      00345         INCF    r0x00, F
00D2 5000      00346         MOVF    r0x00, W
00D4 80D8      00347         BSF     STATUS, 0
00D6 66E8      00348         TSTFSZ  WREG
00D8 90D8      00349         BCF     STATUS, 0
00DA 6A00      00350         CLRF    r0x00
00DC 3600      00351         RLCF    r0x00, F
               00352 ; removed redundant BANKSEL
00DE 5100      00353         MOVF    (_mins_debounce + 1), W, B
00E0 1800      00354         XORWF   r0x00, W
00E2 E000      00355         BZ      _00231_DS_
               00356 ;       .line   193; user.c     inc_mins();
00E4 EC00 F000 00357         CALL    _inc_mins
               00358 ;       .line   194; user.c     inc_metric_sw_mins();
00E8 C000 F000 00359         MOVFF   (_eeprom_data + 8), r0x00
00EC C000 F000 00360         MOVFF   (_eeprom_data + 9), r0x01
00F0 C000 F000 00361         MOVFF   (_eeprom_data + 10), r0x02
00F4 C000 F000 00362         MOVFF   (_eeprom_data + 11), r0x03
00F8 2A00      00363         INCF    r0x00, F
00FA B0D8      00364         BTFSC   STATUS, 0
00FC 2A00      00365         INCF    r0x01, F
00FE B0D8      00366         BTFSC   STATUS, 0
0100 2A00      00367         INCF    r0x02, F
0102 B0D8      00368         BTFSC   STATUS, 0
0104 2A00      00369         INCF    r0x03, F
0106 5000      00370         MOVF    r0x00, W
0108 0000      00371         BANKSEL (_eeprom_data + 8)
010A 6F00      00372         MOVWF   (_eeprom_data + 8), B
010C 5000      00373         MOVF    r0x01, W
               00374 ; removed redundant BANKSEL
010E 6F00      00375         MOVWF   (_eeprom_data + 9), B
0110 5000      00376         MOVF    r0x02, W
               00377 ; removed redundant BANKSEL
0112 6F00      00378         MOVWF   (_eeprom_data + 10), B
gpasm-0.13.4 beta               user.asm    6-24-2008  22:20:40          PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0114 5000      00379         MOVF    r0x03, W
               00380 ; removed redundant BANKSEL
0116 6F00      00381         MOVWF   (_eeprom_data + 11), B
0118 EC00 F000 00382         CALL    _trigger_save_eeprom
011C           00383 _00231_DS_:
               00384 ;       .line   197; user.c     if (debounce_just_pressed(secs_debounce,secs_switch_raw)){
011C BE00      00385         BTFSC   _PORTA, 7
011E D000      00386         BRA     _00235_DS_
0120 0E7C      00387         MOVLW   0x7c
0122 0000      00388         BANKSEL _secs_debounce
0124 5D00      00389         SUBWF   _secs_debounce, W, B
0126 E200      00390         BC      _00235_DS_
0128 0E80      00391         MOVLW   0x80
012A 1400      00392         ANDWF   _PORTA, W
012C 6E00      00393         MOVWF   r0x00
012E 5000      00394         MOVF    r0x00, W
0130 80D8      00395         BSF     STATUS, 0
0132 66E8      00396         TSTFSZ  WREG
0134 90D8      00397         BCF     STATUS, 0
0136 6A00      00398         CLRF    r0x00
0138 3600      00399         RLCF    r0x00, F
               00400 ; removed redundant BANKSEL
013A 5100      00401         MOVF    (_secs_debounce + 1), W, B
013C 1800      00402         XORWF   r0x00, W
013E E000      00403         BZ      _00235_DS_
               00404 ;       .line   198; user.c     clear_secs();
0140 EC00 F000 00405         CALL    _clear_secs
               00406 ;       .line   199; user.c     inc_metric_sw_secs();
0144 C000 F000 00407         MOVFF   (_eeprom_data + 12), r0x00
0148 C000 F000 00408         MOVFF   (_eeprom_data + 13), r0x01
014C C000 F000 00409         MOVFF   (_eeprom_data + 14), r0x02
0150 C000 F000 00410         MOVFF   (_eeprom_data + 15), r0x03
0154 2A00      00411         INCF    r0x00, F
0156 B0D8      00412         BTFSC   STATUS, 0
0158 2A00      00413         INCF    r0x01, F
015A B0D8      00414         BTFSC   STATUS, 0
015C 2A00      00415         INCF    r0x02, F
015E B0D8      00416         BTFSC   STATUS, 0
0160 2A00      00417         INCF    r0x03, F
0162 5000      00418         MOVF    r0x00, W
0164 0000      00419         BANKSEL (_eeprom_data + 12)
0166 6F00      00420         MOVWF   (_eeprom_data + 12), B
0168 5000      00421         MOVF    r0x01, W
               00422 ; removed redundant BANKSEL
016A 6F00      00423         MOVWF   (_eeprom_data + 13), B
016C 5000      00424         MOVF    r0x02, W
               00425 ; removed redundant BANKSEL
016E 6F00      00426         MOVWF   (_eeprom_data + 14), B
0170 5000      00427         MOVF    r0x03, W
               00428 ; removed redundant BANKSEL
0172 6F00      00429         MOVWF   (_eeprom_data + 15), B
0174 EC00 F000 00430         CALL    _trigger_save_eeprom
0178           00431 _00235_DS_:
               00432 ;       .line   202; user.c     debounce_add_sample(hours_debounce,hours_switch_raw);
gpasm-0.13.4 beta               user.asm    6-24-2008  22:20:40          PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0178 6A00      00433         CLRF    r0x00
017A B400      00434         BTFSC   _PORTBbits, 2
017C 2A00      00435         INCF    r0x00, F
017E 5000      00436         MOVF    r0x00, W
0180 80D8      00437         BSF     STATUS, 0
0182 66E8      00438         TSTFSZ  WREG
0184 90D8      00439         BCF     STATUS, 0
0186 6A00      00440         CLRF    r0x00
0188 3600      00441         RLCF    r0x00, F
018A 0000      00442         BANKSEL (_hours_debounce + 1)
018C 5100      00443         MOVF    (_hours_debounce + 1), W, B
018E 1800      00444         XORWF   r0x00, W
0190 E000      00445         BZ      _00239_DS_
0192 0E7F      00446         MOVLW   0x7f
0194 0000      00447         BANKSEL _hours_debounce
0196 6F00      00448         MOVWF   _hours_debounce, B
0198 6A00      00449         CLRF    r0x00
019A B400      00450         BTFSC   _PORTBbits, 2
019C 2A00      00451         INCF    r0x00, F
019E 5000      00452         MOVF    r0x00, W
01A0 80D8      00453         BSF     STATUS, 0
01A2 66E8      00454         TSTFSZ  WREG
01A4 90D8      00455         BCF     STATUS, 0
01A6 6A00      00456         CLRF    r0x00
01A8 3600      00457         RLCF    r0x00, F
01AA 5000      00458         MOVF    r0x00, W
               00459 ; removed redundant BANKSEL
01AC 6F00      00460         MOVWF   (_hours_debounce + 1), B
01AE           00461 _00239_DS_:
01AE C000 F000 00462         MOVFF   _hours_debounce, r0x00
01B2 5000      00463         MOVF    r0x00, W
01B4 E000      00464         BZ      _00241_DS_
01B6 0600      00465         DECF    r0x00, F
01B8 5000      00466         MOVF    r0x00, W
01BA 0000      00467         BANKSEL _hours_debounce
01BC 6F00      00468         MOVWF   _hours_debounce, B
01BE           00469 _00241_DS_:
               00470 ;       .line   203; user.c     debounce_add_sample(mins_debounce,mins_switch_raw);
01BE 6A00      00471         CLRF    r0x00
01C0 BC00      00472         BTFSC   _PORTAbits, 6
01C2 2A00      00473         INCF    r0x00, F
01C4 5000      00474         MOVF    r0x00, W
01C6 80D8      00475         BSF     STATUS, 0
01C8 66E8      00476         TSTFSZ  WREG
01CA 90D8      00477         BCF     STATUS, 0
01CC 6A00      00478         CLRF    r0x00
01CE 3600      00479         RLCF    r0x00, F
01D0 0000      00480         BANKSEL (_mins_debounce + 1)
01D2 5100      00481         MOVF    (_mins_debounce + 1), W, B
01D4 1800      00482         XORWF   r0x00, W
01D6 E000      00483         BZ      _00243_DS_
01D8 0E7F      00484         MOVLW   0x7f
01DA 0000      00485         BANKSEL _mins_debounce
01DC 6F00      00486         MOVWF   _mins_debounce, B
gpasm-0.13.4 beta               user.asm    6-24-2008  22:20:40          PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01DE 6A00      00487         CLRF    r0x00
01E0 BC00      00488         BTFSC   _PORTAbits, 6
01E2 2A00      00489         INCF    r0x00, F
01E4 5000      00490         MOVF    r0x00, W
01E6 80D8      00491         BSF     STATUS, 0
01E8 66E8      00492         TSTFSZ  WREG
01EA 90D8      00493         BCF     STATUS, 0
01EC 6A00      00494         CLRF    r0x00
01EE 3600      00495         RLCF    r0x00, F
01F0 5000      00496         MOVF    r0x00, W
               00497 ; removed redundant BANKSEL
01F2 6F00      00498         MOVWF   (_mins_debounce + 1), B
01F4           00499 _00243_DS_:
01F4 C000 F000 00500         MOVFF   _mins_debounce, r0x00
01F8 5000      00501         MOVF    r0x00, W
01FA E000      00502         BZ      _00245_DS_
01FC 0600      00503         DECF    r0x00, F
01FE 5000      00504         MOVF    r0x00, W
0200 0000      00505         BANKSEL _mins_debounce
0202 6F00      00506         MOVWF   _mins_debounce, B
0204           00507 _00245_DS_:
               00508 ;       .line   204; user.c     debounce_add_sample(secs_debounce,secs_switch_raw);
0204 0E80      00509         MOVLW   0x80
0206 1400      00510         ANDWF   _PORTA, W
0208 6E00      00511         MOVWF   r0x00
020A 5000      00512         MOVF    r0x00, W
020C 80D8      00513         BSF     STATUS, 0
020E 66E8      00514         TSTFSZ  WREG
0210 90D8      00515         BCF     STATUS, 0
0212 6A00      00516         CLRF    r0x00
0214 3600      00517         RLCF    r0x00, F
0216 0000      00518         BANKSEL (_secs_debounce + 1)
0218 5100      00519         MOVF    (_secs_debounce + 1), W, B
021A 1800      00520         XORWF   r0x00, W
021C E000      00521         BZ      _00247_DS_
021E 0E7F      00522         MOVLW   0x7f
0220 0000      00523         BANKSEL _secs_debounce
0222 6F00      00524         MOVWF   _secs_debounce, B
0224 0E80      00525         MOVLW   0x80
0226 1400      00526         ANDWF   _PORTA, W
0228 6E00      00527         MOVWF   r0x00
022A 5000      00528         MOVF    r0x00, W
022C 80D8      00529         BSF     STATUS, 0
022E 66E8      00530         TSTFSZ  WREG
0230 90D8      00531         BCF     STATUS, 0
0232 6A00      00532         CLRF    r0x00
0234 3600      00533         RLCF    r0x00, F
0236 5000      00534         MOVF    r0x00, W
               00535 ; removed redundant BANKSEL
0238 6F00      00536         MOVWF   (_secs_debounce + 1), B
023A           00537 _00247_DS_:
023A C000 F000 00538         MOVFF   _secs_debounce, r0x00
023E 5000      00539         MOVF    r0x00, W
0240 E000      00540         BZ      _00250_DS_
gpasm-0.13.4 beta               user.asm    6-24-2008  22:20:40          PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0242 0600      00541         DECF    r0x00, F
0244 5000      00542         MOVF    r0x00, W
0246 0000      00543         BANKSEL _secs_debounce
0248 6F00      00544         MOVWF   _secs_debounce, B
024A           00545 _00250_DS_:
024A CFE4 F000 00546         MOVFF   PREINC1, r0x03
024E CFE4 F000 00547         MOVFF   PREINC1, r0x02
0252 CFE4 F000 00548         MOVFF   PREINC1, r0x01
0256 CFE4 F000 00549         MOVFF   PREINC1, r0x00
025A 0012      00550         RETURN  
               00551 
               00552 ; ; Starting pCode block
               00553 S_user__display_time    code
0000           00554 _display_time:
               00555 ;       .line   129; user.c     void display_time(){
0000 C000 FFE5 00556         MOVFF   r0x00, POSTDEC1
0004 C000 FFE5 00557         MOVFF   r0x01, POSTDEC1
0008 C000 FFE5 00558         MOVFF   r0x02, POSTDEC1
000C C000 FFE5 00559         MOVFF   r0x03, POSTDEC1
0010 C000 FFE5 00560         MOVFF   r0x04, POSTDEC1
0014 C000 FFE5 00561         MOVFF   r0x05, POSTDEC1
0018 0000      00562         BANKSEL _mode
               00563 ;       .line   133; user.c     if (mode == fast_clock){
001A 5100      00564         MOVF    _mode, W, B
001C 0A01      00565         XORLW   0x01
001E E100      00566         BNZ     _00196_DS_
               00567 ;       .line   135; user.c     adj_secs = (time_secs / (secs_to_real_secs_divider / 2)) % 60;
0020 90D8      00568         BCF     STATUS, 0
0022 0000      00569         BANKSEL _time_secs
0024 3100      00570         RRCF    _time_secs, W, B
0026 6E00      00571         MOVWF   r0x00
0028 0E3C      00572         MOVLW   0x3c
002A 6EE5      00573         MOVWF   POSTDEC1
002C C000 FFE5 00574         MOVFF   r0x00, POSTDEC1
0030 EC00 F000 00575         CALL    __moduchar
0034 6E00      00576         MOVWF   r0x00
0036 50E4      00577         MOVF    PREINC1, W
0038 50E4      00578         MOVF    PREINC1, W
003A D000      00579         BRA     _00197_DS_
003C           00580 _00196_DS_:
003C 0000      00581         BANKSEL _time_secs
               00582 ;       .line   140; user.c     adj_secs = (time_secs / (secs_to_real_secs_divider * 2)) + ((time_mins % 2) * 30);
003E 3900      00583         SWAPF   _time_secs, W, B
0040 6E00      00584         MOVWF   r0x01
0042 4400      00585         RLNCF   r0x01, W
0044 0B1F      00586         ANDLW   0x1f
0046 6E00      00587         MOVWF   r0x01
0048 0E01      00588         MOVLW   0x01
004A 0000      00589         BANKSEL _time_mins
004C 1500      00590         ANDWF   _time_mins, W, B
               00591 ; ;multiply lit val:0x1e by variable r0x02 and store in r0x02
               00592 ; ;Unrolled 8 X 8 multiplication
               00593 ; ;FIXME: the function does not support result==WREG
004E 0D1E      00594         MULLW   0x1e
gpasm-0.13.4 beta               user.asm    6-24-2008  22:20:40          PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0050 CFF3 F000 00595         MOVFF   PRODL, r0x02
0054 5000      00596         MOVF    r0x02, W
0056 2400      00597         ADDWF   r0x01, W
0058 6E00      00598         MOVWF   r0x00
005A           00599 _00197_DS_:
               00600 ;       .line   144; user.c     set_dots(false,true,true,true,true,false);
005A 0E01      00601         MOVLW   0x01
005C 0000      00602         BANKSEL _dot1
005E 6F00      00603         MOVWF   _dot1, B
               00604 ;       .line   147; user.c     adj_hours = time_hours;
0060 C000 F000 00605         MOVFF   _time_hours, r0x01
0064 0000      00606         BANKSEL _silly_hour_display
               00607 ;       .line   148; user.c     if (silly_hour_display){
0066 5100      00608         MOVF    _silly_hour_display, W, B
0068 E000      00609         BZ      _00204_DS_
               00610 ;       .line   149; user.c     if (adj_hours >= 12){
006A 0E0C      00611         MOVLW   0x0c
006C 5C00      00612         SUBWF   r0x01, W
006E E300      00613         BNC     _00199_DS_
               00614 ;       .line   150; user.c     adj_hours = adj_hours - 12;
0070 0EF4      00615         MOVLW   0xf4
0072 2600      00616         ADDWF   r0x01, F
0074 D000      00617         BRA     _00200_DS_
0076           00618 _00199_DS_:
0076 0000      00619         BANKSEL _dot1
               00620 ;       .line   153; user.c     set_dots(false,false,true,true,true,false);
0078 6B00      00621         CLRF    _dot1, B
007A           00622 _00200_DS_:
               00623 ;       .line   155; user.c     if (!adj_hours)
007A 5000      00624         MOVF    r0x01, W
007C E100      00625         BNZ     _00204_DS_
               00626 ;       .line   156; user.c     adj_hours = 12; // blah, so much work for such sillyness
007E 0E0C      00627         MOVLW   0x0c
0080 6E00      00628         MOVWF   r0x01
0082           00629 _00204_DS_:
               00630 ;       .line   158; user.c     adj_hours = to_bcd(adj_hours);
0082 5000      00631         MOVF    r0x01, W
0084 6EE5      00632         MOVWF   POSTDEC1
0086 EC00 F000 00633         CALL    _to_bcd
008A 6E00      00634         MOVWF   r0x01
008C 2AE1      00635         INCF    FSR1L, F
               00636 ;       .line   160; user.c     h0 = adj_hours / 16;
008E 3800      00637         SWAPF   r0x01, W
0090 0B0F      00638         ANDLW   0x0f
0092 6E00      00639         MOVWF   r0x02
               00640 ;       .line   161; user.c     if (!h0 && silly_hour_display)
0094 5000      00641         MOVF    r0x02, W
0096 E100      00642         BNZ     _00206_DS_
0098 0000      00643         BANKSEL _silly_hour_display
009A 5100      00644         MOVF    _silly_hour_display, W, B
009C E000      00645         BZ      _00206_DS_
               00646 ;       .line   162; user.c     h0 = CHAR_BLANK; // remove leading zeros for hours
009E 0E10      00647         MOVLW   0x10
00A0 6E00      00648         MOVWF   r0x02
gpasm-0.13.4 beta               user.asm    6-24-2008  22:20:40          PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00A2           00649 _00206_DS_:
               00650 ;       .line   167; user.c     h1 = adj_hours % 16;
00A2 0E0F      00651         MOVLW   0x0f
00A4 1600      00652         ANDWF   r0x01, F
00A6 0000      00653         BANKSEL _time_mins
               00654 ;       .line   170; user.c     adj_mins = to_bcd(time_mins);
00A8 5100      00655         MOVF    _time_mins, W, B
00AA 6EE5      00656         MOVWF   POSTDEC1
00AC EC00 F000 00657         CALL    _to_bcd
00B0 6E00      00658         MOVWF   r0x03
00B2 2AE1      00659         INCF    FSR1L, F
               00660 ;       .line   171; user.c     adj_secs = to_bcd(adj_secs);
00B4 5000      00661         MOVF    r0x00, W
00B6 6EE5      00662         MOVWF   POSTDEC1
00B8 EC00 F000 00663         CALL    _to_bcd
00BC 6E00      00664         MOVWF   r0x00
00BE 2AE1      00665         INCF    FSR1L, F
               00666 ;       .line   172; user.c     display_digits(
00C0 3800      00667         SWAPF   r0x03, W
00C2 0B0F      00668         ANDLW   0x0f
00C4 6E00      00669         MOVWF   r0x04
00C6 0E0F      00670         MOVLW   0x0f
00C8 1600      00671         ANDWF   r0x03, F
00CA 3800      00672         SWAPF   r0x00, W
00CC 0B0F      00673         ANDLW   0x0f
00CE 6E00      00674         MOVWF   r0x05
00D0 0E0F      00675         MOVLW   0x0f
00D2 1600      00676         ANDWF   r0x00, F
00D4 5000      00677         MOVF    r0x00, W
00D6 6EE5      00678         MOVWF   POSTDEC1
00D8 5000      00679         MOVF    r0x05, W
00DA 6EE5      00680         MOVWF   POSTDEC1
00DC 5000      00681         MOVF    r0x03, W
00DE 6EE5      00682         MOVWF   POSTDEC1
00E0 5000      00683         MOVF    r0x04, W
00E2 6EE5      00684         MOVWF   POSTDEC1
00E4 5000      00685         MOVF    r0x01, W
00E6 6EE5      00686         MOVWF   POSTDEC1
00E8 5000      00687         MOVF    r0x02, W
00EA 6EE5      00688         MOVWF   POSTDEC1
00EC EC00 F000 00689         CALL    _display_digits_real
00F0 0E06      00690         MOVLW   0x06
00F2 26E1      00691         ADDWF   FSR1L, F
00F4 CFE4 F000 00692         MOVFF   PREINC1, r0x05
00F8 CFE4 F000 00693         MOVFF   PREINC1, r0x04
00FC CFE4 F000 00694         MOVFF   PREINC1, r0x03
0100 CFE4 F000 00695         MOVFF   PREINC1, r0x02
0104 CFE4 F000 00696         MOVFF   PREINC1, r0x01
0108 CFE4 F000 00697         MOVFF   PREINC1, r0x00
010C 0012      00698         RETURN  
               00699 
               00700 ; ; Starting pCode block
               00701 S_user__init_user       code
0000           00702 _init_user:
gpasm-0.13.4 beta               user.asm    6-24-2008  22:20:40          PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00703 ;       .line   48; user.c      void init_user(){
0000 C000 FFE5 00704         MOVFF   r0x00, POSTDEC1
0004 C000 FFE5 00705         MOVFF   r0x01, POSTDEC1
0008 C000 FFE5 00706         MOVFF   r0x02, POSTDEC1
000C C000 FFE5 00707         MOVFF   r0x03, POSTDEC1
0010 C000 FFE5 00708         MOVFF   r0x04, POSTDEC1
0014 C000 FFE5 00709         MOVFF   r0x05, POSTDEC1
0018 C000 FFE5 00710         MOVFF   r0x06, POSTDEC1
               00711 ;       .line   51; user.c      init_display();
001C EC00 F000 00712         CALL    _init_display
               00713 ;       .line   53; user.c      TRISBbits.TRISB2 = 1;
0020 8400      00714         BSF     _TRISBbits, 2
               00715 ;       .line   61; user.c      TRISA = TRISA | b(11010001);
0022 0ED1      00716         MOVLW   0xd1
0024 1200      00717         IORWF   _TRISA, F
               00718 ;       .line   65; user.c      ADCON0 = b(00000001);
0026 0E01      00719         MOVLW   0x01
0028 6E00      00720         MOVWF   _ADCON0
               00721 ;       .line   66; user.c      ADCON1 = b(01111110);
002A 0E7E      00722         MOVLW   0x7e
002C 6E00      00723         MOVWF   _ADCON1
               00724 ;       .line   67; user.c      ADCON2 = b(00000000);
002E 6A00      00725         CLRF    _ADCON2
               00726 ;       .line   69; user.c      CCP1CON = b(00001100);
0030 0E0C      00727         MOVLW   0x0c
0032 6E00      00728         MOVWF   _CCP1CON
               00729 ;       .line   70; user.c      PR2 = 0xFF;
0034 0EFF      00730         MOVLW   0xff
0036 6E00      00731         MOVWF   _PR2
               00732 ;       .line   71; user.c      T2CON = b(00000100);
0038 0E04      00733         MOVLW   0x04
003A 6E00      00734         MOVWF   _T2CON
               00735 ;       .line   72; user.c      CCPR1L = 0x00;
003C 6A00      00736         CLRF    _CCPR1L
003E 0000      00737         BANKSEL _hours_debounce
               00738 ;       .line   74; user.c      debounce_init(hours_debounce,hours_switch_raw);
0040 6B00      00739         CLRF    _hours_debounce, B
0042 6A00      00740         CLRF    r0x00
0044 B400      00741         BTFSC   _PORTBbits, 2
0046 2A00      00742         INCF    r0x00, F
0048 5000      00743         MOVF    r0x00, W
004A 80D8      00744         BSF     STATUS, 0
004C 66E8      00745         TSTFSZ  WREG
004E 90D8      00746         BCF     STATUS, 0
0050 6A00      00747         CLRF    r0x00
0052 3600      00748         RLCF    r0x00, F
0054 5000      00749         MOVF    r0x00, W
               00750 ; removed redundant BANKSEL
0056 6F00      00751         MOVWF   (_hours_debounce + 1), B
0058 0000      00752         BANKSEL _mins_debounce
               00753 ;       .line   75; user.c      debounce_init(mins_debounce,mins_switch_raw);
005A 6B00      00754         CLRF    _mins_debounce, B
005C 6A00      00755         CLRF    r0x00
005E BC00      00756         BTFSC   _PORTAbits, 6
gpasm-0.13.4 beta               user.asm    6-24-2008  22:20:40          PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0060 2A00      00757         INCF    r0x00, F
0062 5000      00758         MOVF    r0x00, W
0064 80D8      00759         BSF     STATUS, 0
0066 66E8      00760         TSTFSZ  WREG
0068 90D8      00761         BCF     STATUS, 0
006A 6A00      00762         CLRF    r0x00
006C 3600      00763         RLCF    r0x00, F
006E 5000      00764         MOVF    r0x00, W
               00765 ; removed redundant BANKSEL
0070 6F00      00766         MOVWF   (_mins_debounce + 1), B
0072 0000      00767         BANKSEL _secs_debounce
               00768 ;       .line   76; user.c      debounce_init(secs_debounce,secs_switch_raw);
0074 6B00      00769         CLRF    _secs_debounce, B
0076 0E80      00770         MOVLW   0x80
0078 1400      00771         ANDWF   _PORTA, W
007A 6E00      00772         MOVWF   r0x00
007C 5000      00773         MOVF    r0x00, W
007E 80D8      00774         BSF     STATUS, 0
0080 66E8      00775         TSTFSZ  WREG
0082 90D8      00776         BCF     STATUS, 0
0084 6A00      00777         CLRF    r0x00
0086 3600      00778         RLCF    r0x00, F
0088 5000      00779         MOVF    r0x00, W
               00780 ; removed redundant BANKSEL
008A 6F00      00781         MOVWF   (_secs_debounce + 1), B
               00782 ;       .line   78; user.c      if (!hours_switch_raw && !mins_switch_raw && secs_switch_raw){
008C A400      00783         BTFSS   _PORTBbits, 2
008E D000      00784         BRA     _00139_DS_
0090 AC00      00785         BTFSS   _PORTAbits, 6
0092 D000      00786         BRA     _00139_DS_
0094 BE00      00787         BTFSC   _PORTA, 7
0096 D000      00788         BRA     _00139_DS_
               00789 ;       .line   79; user.c      mode = fast_clock;
0098 0E01      00790         MOVLW   0x01
009A 0000      00791         BANKSEL _mode
009C 6F00      00792         MOVWF   _mode, B
009E D000      00793         BRA     _00140_DS_
00A0           00794 _00139_DS_:
               00795 ;       .line   80; user.c      } else if (hours_switch_raw && !mins_switch_raw && !secs_switch_raw){
00A0 B400      00796         BTFSC   _PORTBbits, 2
00A2 D000      00797         BRA     _00134_DS_
00A4 AC00      00798         BTFSS   _PORTAbits, 6
00A6 D000      00799         BRA     _00134_DS_
00A8 AE00      00800         BTFSS   _PORTA, 7
00AA D000      00801         BRA     _00134_DS_
               00802 ;       .line   81; user.c      mode = slow_clock;
00AC 0E03      00803         MOVLW   0x03
00AE 0000      00804         BANKSEL _mode
00B0 6F00      00805         MOVWF   _mode, B
00B2 D000      00806         BRA     _00140_DS_
00B4           00807 _00134_DS_:
               00808 ;       .line   82; user.c      } else if (!hours_switch_raw && mins_switch_raw && !secs_switch_raw){
00B4 A400      00809         BTFSS   _PORTBbits, 2
00B6 D000      00810         BRA     _00129_DS_
gpasm-0.13.4 beta               user.asm    6-24-2008  22:20:40          PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00B8 BC00      00811         BTFSC   _PORTAbits, 6
00BA D000      00812         BRA     _00129_DS_
00BC AE00      00813         BTFSS   _PORTA, 7
00BE D000      00814         BRA     _00129_DS_
               00815 ;       .line   84; user.c      inc_metric_meta();
00C0 C000 F000 00816         MOVFF   (_eeprom_data + 24), r0x00
00C4 C000 F000 00817         MOVFF   (_eeprom_data + 25), r0x01
00C8 C000 F000 00818         MOVFF   (_eeprom_data + 26), r0x02
00CC C000 F000 00819         MOVFF   (_eeprom_data + 27), r0x03
00D0 2A00      00820         INCF    r0x00, F
00D2 B0D8      00821         BTFSC   STATUS, 0
00D4 2A00      00822         INCF    r0x01, F
00D6 B0D8      00823         BTFSC   STATUS, 0
00D8 2A00      00824         INCF    r0x02, F
00DA B0D8      00825         BTFSC   STATUS, 0
00DC 2A00      00826         INCF    r0x03, F
00DE 5000      00827         MOVF    r0x00, W
00E0 0000      00828         BANKSEL (_eeprom_data + 24)
00E2 6F00      00829         MOVWF   (_eeprom_data + 24), B
00E4 5000      00830         MOVF    r0x01, W
               00831 ; removed redundant BANKSEL
00E6 6F00      00832         MOVWF   (_eeprom_data + 25), B
00E8 5000      00833         MOVF    r0x02, W
               00834 ; removed redundant BANKSEL
00EA 6F00      00835         MOVWF   (_eeprom_data + 26), B
00EC 5000      00836         MOVF    r0x03, W
               00837 ; removed redundant BANKSEL
00EE 6F00      00838         MOVWF   (_eeprom_data + 27), B
00F0 EC00 F000 00839         CALL    _save_eeprom_fully
               00840 ;       .line   89; user.c      i = 0;
00F4 6A00      00841         CLRF    r0x00
00F6           00842 _00126_DS_:
               00843 ;       .line   91; user.c      display_digits(
00F6 3800      00844         SWAPF   r0x00, W
00F8 0B0F      00845         ANDLW   0x0f
00FA 6E00      00846         MOVWF   r0x01
00FC 0E0F      00847         MOVLW   0x0f
00FE 1400      00848         ANDWF   r0x00, W
0100 6E00      00849         MOVWF   r0x02
0102 0E00      00850         MOVLW   HIGH(_eeprom_data)
0104 6E00      00851         MOVWF   r0x04
0106 0E00      00852         MOVLW   LOW(_eeprom_data)
0108 6E00      00853         MOVWF   r0x03
010A 0E80      00854         MOVLW   0x80
010C 6E00      00855         MOVWF   r0x05
010E 5000      00856         MOVF    r0x00, W
0110 2600      00857         ADDWF   r0x03, F
0112 6AE8      00858         CLRF    WREG
0114 2200      00859         ADDWFC  r0x04, F
0116 6AE8      00860         CLRF    WREG
0118 2200      00861         ADDWFC  r0x05, F
011A C000 FFE9 00862         MOVFF   r0x03, FSR0L
011E C000 FFF3 00863         MOVFF   r0x04, PRODL
0122 5000      00864         MOVF    r0x05, W
gpasm-0.13.4 beta               user.asm    6-24-2008  22:20:40          PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0124 EC00 F000 00865         CALL    __gptrget1
0128 6E00      00866         MOVWF   r0x03
012A 3800      00867         SWAPF   r0x03, W
012C 0B0F      00868         ANDLW   0x0f
012E 6E00      00869         MOVWF   r0x03
0130 0E00      00870         MOVLW   HIGH(_eeprom_data)
0132 6E00      00871         MOVWF   r0x05
0134 0E00      00872         MOVLW   LOW(_eeprom_data)
0136 6E00      00873         MOVWF   r0x04
0138 0E80      00874         MOVLW   0x80
013A 6E00      00875         MOVWF   r0x06
013C 5000      00876         MOVF    r0x00, W
013E 2600      00877         ADDWF   r0x04, F
0140 6AE8      00878         CLRF    WREG
0142 2200      00879         ADDWFC  r0x05, F
0144 6AE8      00880         CLRF    WREG
0146 2200      00881         ADDWFC  r0x06, F
0148 C000 FFE9 00882         MOVFF   r0x04, FSR0L
014C C000 FFF3 00883         MOVFF   r0x05, PRODL
0150 5000      00884         MOVF    r0x06, W
0152 EC00 F000 00885         CALL    __gptrget1
0156 6E00      00886         MOVWF   r0x04
0158 0E0F      00887         MOVLW   0x0f
015A 1600      00888         ANDWF   r0x04, F
015C 5000      00889         MOVF    r0x04, W
015E 6EE5      00890         MOVWF   POSTDEC1
0160 5000      00891         MOVF    r0x03, W
0162 6EE5      00892         MOVWF   POSTDEC1
0164 0E10      00893         MOVLW   0x10
0166 6EE5      00894         MOVWF   POSTDEC1
0168 6EE5      00895         MOVWF   POSTDEC1
016A 5000      00896         MOVF    r0x02, W
016C 6EE5      00897         MOVWF   POSTDEC1
016E 5000      00898         MOVF    r0x01, W
0170 6EE5      00899         MOVWF   POSTDEC1
0172 EC00 F000 00900         CALL    _display_digits_real
0176 0E06      00901         MOVLW   0x06
0178 26E1      00902         ADDWF   FSR1L, F
               00903 ;       .line   97; user.c      delay10tcy(1);
017A 0E01      00904         MOVLW   0x01
017C EC00 F000 00905         CALL    _delay10tcy
               00906 ;       .line   99; user.c      if (debounce_just_pressed(hours_debounce,hours_switch_raw)){
0180 B400      00907         BTFSC   _PORTBbits, 2
0182 D000      00908         BRA     _00108_DS_
0184 0E7C      00909         MOVLW   0x7c
0186 0000      00910         BANKSEL _hours_debounce
0188 5D00      00911         SUBWF   _hours_debounce, W, B
018A E200      00912         BC      _00108_DS_
018C 6A00      00913         CLRF    r0x01
018E B400      00914         BTFSC   _PORTBbits, 2
0190 2A00      00915         INCF    r0x01, F
0192 5000      00916         MOVF    r0x01, W
0194 80D8      00917         BSF     STATUS, 0
0196 66E8      00918         TSTFSZ  WREG
gpasm-0.13.4 beta               user.asm    6-24-2008  22:20:40          PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0198 90D8      00919         BCF     STATUS, 0
019A 6A00      00920         CLRF    r0x01
019C 3600      00921         RLCF    r0x01, F
               00922 ; removed redundant BANKSEL
019E 5100      00923         MOVF    (_hours_debounce + 1), W, B
01A0 1800      00924         XORWF   r0x01, W
01A2 E000      00925         BZ      _00108_DS_
               00926 ;       .line   100; user.c     i++;
01A4 2A00      00927         INCF    r0x00, F
               00928 ;       .line   101; user.c     if (i >= sizeof(eeprom_data))
01A6 0E24      00929         MOVLW   0x24
01A8 5C00      00930         SUBWF   r0x00, W
01AA E300      00931         BNC     _00108_DS_
               00932 ;       .line   102; user.c     i = 0;
01AC 6A00      00933         CLRF    r0x00
01AE           00934 _00108_DS_:
               00935 ;       .line   104; user.c     if (debounce_just_pressed(secs_debounce,secs_switch_raw)){
01AE BE00      00936         BTFSC   _PORTA, 7
01B0 D000      00937         BRA     _00114_DS_
01B2 0E7C      00938         MOVLW   0x7c
01B4 0000      00939         BANKSEL _secs_debounce
01B6 5D00      00940         SUBWF   _secs_debounce, W, B
01B8 E200      00941         BC      _00114_DS_
01BA 0E80      00942         MOVLW   0x80
01BC 1400      00943         ANDWF   _PORTA, W
01BE 6E00      00944         MOVWF   r0x01
01C0 5000      00945         MOVF    r0x01, W
01C2 80D8      00946         BSF     STATUS, 0
01C4 66E8      00947         TSTFSZ  WREG
01C6 90D8      00948         BCF     STATUS, 0
01C8 6A00      00949         CLRF    r0x01
01CA 3600      00950         RLCF    r0x01, F
               00951 ; removed redundant BANKSEL
01CC 5100      00952         MOVF    (_secs_debounce + 1), W, B
01CE 1800      00953         XORWF   r0x01, W
01D0 E000      00954         BZ      _00114_DS_
               00955 ;       .line   105; user.c     i--;
01D2 0600      00956         DECF    r0x00, F
               00957 ;       .line   106; user.c     if (i >= sizeof(eeprom_data))
01D4 0E24      00958         MOVLW   0x24
01D6 5C00      00959         SUBWF   r0x00, W
01D8 E300      00960         BNC     _00114_DS_
               00961 ;       .line   107; user.c     i = sizeof(eeprom_data) - 1;
01DA 0E23      00962         MOVLW   0x23
01DC 6E00      00963         MOVWF   r0x00
01DE           00964 _00114_DS_:
               00965 ;       .line   110; user.c     debounce_add_sample(hours_debounce,hours_switch_raw);
01DE 6A00      00966         CLRF    r0x01
01E0 B400      00967         BTFSC   _PORTBbits, 2
01E2 2A00      00968         INCF    r0x01, F
01E4 5000      00969         MOVF    r0x01, W
01E6 80D8      00970         BSF     STATUS, 0
01E8 66E8      00971         TSTFSZ  WREG
01EA 90D8      00972         BCF     STATUS, 0
gpasm-0.13.4 beta               user.asm    6-24-2008  22:20:40          PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01EC 6A00      00973         CLRF    r0x01
01EE 3600      00974         RLCF    r0x01, F
01F0 0000      00975         BANKSEL (_hours_debounce + 1)
01F2 5100      00976         MOVF    (_hours_debounce + 1), W, B
01F4 1800      00977         XORWF   r0x01, W
01F6 E000      00978         BZ      _00118_DS_
01F8 0E7F      00979         MOVLW   0x7f
01FA 0000      00980         BANKSEL _hours_debounce
01FC 6F00      00981         MOVWF   _hours_debounce, B
01FE 6A00      00982         CLRF    r0x01
0200 B400      00983         BTFSC   _PORTBbits, 2
0202 2A00      00984         INCF    r0x01, F
0204 5000      00985         MOVF    r0x01, W
0206 80D8      00986         BSF     STATUS, 0
0208 66E8      00987         TSTFSZ  WREG
020A 90D8      00988         BCF     STATUS, 0
020C 6A00      00989         CLRF    r0x01
020E 3600      00990         RLCF    r0x01, F
0210 5000      00991         MOVF    r0x01, W
               00992 ; removed redundant BANKSEL
0212 6F00      00993         MOVWF   (_hours_debounce + 1), B
0214           00994 _00118_DS_:
0214 C000 F000 00995         MOVFF   _hours_debounce, r0x01
0218 5000      00996         MOVF    r0x01, W
021A E000      00997         BZ      _00120_DS_
021C 0600      00998         DECF    r0x01, F
021E 5000      00999         MOVF    r0x01, W
0220 0000      01000         BANKSEL _hours_debounce
0222 6F00      01001         MOVWF   _hours_debounce, B
0224           01002 _00120_DS_:
               01003 ;       .line   111; user.c     debounce_add_sample(secs_debounce,secs_switch_raw);
0224 0E80      01004         MOVLW   0x80
0226 1400      01005         ANDWF   _PORTA, W
0228 6E00      01006         MOVWF   r0x01
022A 5000      01007         MOVF    r0x01, W
022C 80D8      01008         BSF     STATUS, 0
022E 66E8      01009         TSTFSZ  WREG
0230 90D8      01010         BCF     STATUS, 0
0232 6A00      01011         CLRF    r0x01
0234 3600      01012         RLCF    r0x01, F
0236 0000      01013         BANKSEL (_secs_debounce + 1)
0238 5100      01014         MOVF    (_secs_debounce + 1), W, B
023A 1800      01015         XORWF   r0x01, W
023C E000      01016         BZ      _00122_DS_
023E 0E7F      01017         MOVLW   0x7f
0240 0000      01018         BANKSEL _secs_debounce
0242 6F00      01019         MOVWF   _secs_debounce, B
0244 0E80      01020         MOVLW   0x80
0246 1400      01021         ANDWF   _PORTA, W
0248 6E00      01022         MOVWF   r0x01
024A 5000      01023         MOVF    r0x01, W
024C 80D8      01024         BSF     STATUS, 0
024E 66E8      01025         TSTFSZ  WREG
0250 90D8      01026         BCF     STATUS, 0
gpasm-0.13.4 beta               user.asm    6-24-2008  22:20:40          PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0252 6A00      01027         CLRF    r0x01
0254 3600      01028         RLCF    r0x01, F
0256 5000      01029         MOVF    r0x01, W
               01030 ; removed redundant BANKSEL
0258 6F00      01031         MOVWF   (_secs_debounce + 1), B
025A           01032 _00122_DS_:
025A 0000      01033         BANKSEL _secs_debounce
025C 5100      01034         MOVF    _secs_debounce, W, B
025E B4D8      01035         BTFSC   STATUS, 2
0260 D000      01036         BRA     _00126_DS_
0262 C000 F000 01037         MOVFF   _secs_debounce, r0x01
0266 0600      01038         DECF    r0x01, F
0268 5000      01039         MOVF    r0x01, W
               01040 ; removed redundant BANKSEL
026A 6F00      01041         MOVWF   _secs_debounce, B
026C D000      01042         BRA     _00126_DS_
026E           01043 _00129_DS_:
               01044 ;       .line   115; user.c     mode = none_chosen;
026E 0E05      01045         MOVLW   0x05
0270 0000      01046         BANKSEL _mode
0272 6F00      01047         MOVWF   _mode, B
0274           01048 _00140_DS_:
0274 0000      01049         BANKSEL _mode
               01050 ;       .line   118; user.c     if (mode == none_chosen){
0276 5100      01051         MOVF    _mode, W, B
0278 0A05      01052         XORLW   0x05
027A E100      01053         BNZ     _00144_DS_
027C           01054 _00190_DS_:
027C 0000      01055         BANKSEL (_eeprom_data + 28)
               01056 ;       .line   119; user.c     mode = eeprom_read_uint32(EEPROM_ADDR_MODE);  
027E 5100      01057         MOVF    (_eeprom_data + 28), W, B
0280 0000      01058         BANKSEL _mode
0282 6F00      01059         MOVWF   _mode, B
0284 D000      01060         BRA     _00145_DS_
0286           01061 _00144_DS_:
               01062 ;       .line   121; user.c     eeprom_write_uint32(mode,EEPROM_ADDR_MODE);
0286 C000 F000 01063         MOVFF   _mode, r0x00
028A 6A00      01064         CLRF    r0x01
028C 5000      01065         MOVF    r0x00, W
028E 0000      01066         BANKSEL (_eeprom_data + 28)
0290 6F00      01067         MOVWF   (_eeprom_data + 28), B
0292 5000      01068         MOVF    r0x01, W
               01069 ; removed redundant BANKSEL
0294 6B00      01070         CLRF    (_eeprom_data + 29), B
               01071 ; removed redundant BANKSEL
0296 6B00      01072         CLRF    (_eeprom_data + 30), B
               01073 ; removed redundant BANKSEL
0298 6B00      01074         CLRF    (_eeprom_data + 31), B
               01075 ;       .line   122; user.c     trigger_save_eeprom();
029A EC00 F000 01076         CALL    _trigger_save_eeprom
029E           01077 _00145_DS_:
029E 0000      01078         BANKSEL (_eeprom_data + 32)
               01079 ;       .line   125; user.c     silly_hour_display = eeprom_read_uint32(EEPROM_ADDR_SILLY_HOUR_DISPLAY);
02A0 5100      01080         MOVF    (_eeprom_data + 32), W, B
gpasm-0.13.4 beta               user.asm    6-24-2008  22:20:40          PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
02A2 0000      01081         BANKSEL _silly_hour_display
02A4 6F00      01082         MOVWF   _silly_hour_display, B
02A6 CFE4 F000 01083         MOVFF   PREINC1, r0x06
02AA CFE4 F000 01084         MOVFF   PREINC1, r0x05
02AE CFE4 F000 01085         MOVFF   PREINC1, r0x04
02B2 CFE4 F000 01086         MOVFF   PREINC1, r0x03
02B6 CFE4 F000 01087         MOVFF   PREINC1, r0x02
02BA CFE4 F000 01088         MOVFF   PREINC1, r0x01
02BE CFE4 F000 01089         MOVFF   PREINC1, r0x00
02C2 0012      01090         RETURN  
               01091 
               01092 
               01093 
               01094 ; Statistics:
               01095 ; code size:     1608 (0x0648) bytes ( 1.23%)
               01096 ;                 804 (0x0324) words
               01097 ; udata size:       8 (0x0008) bytes (12.50%)
               01098 ; access size:      7 (0x0007) bytes
               01099 
               01100 
gpasm-0.13.4 beta               user.asm    6-24-2008  22:20:40          PAGE 22


SYMBOL TABLE
  LABEL                             VALUE 

FSR0L                             00000FE9
FSR1L                             00000FE1
FSR2L                             00000FD9
POSTDEC1                          00000FE5
PREINC1                           00000FE4
PRODL                             00000FF3
STATUS                            00000FD8
WREG                              00000FE8
_00108_DS_                        000001AE
_00114_DS_                        000001DE
_00118_DS_                        00000214
_00120_DS_                        00000224
_00122_DS_                        0000025A
_00126_DS_                        000000F6
_00129_DS_                        0000026E
_00134_DS_                        000000B4
_00139_DS_                        000000A0
_00140_DS_                        00000274
_00144_DS_                        00000286
_00145_DS_                        0000029E
_00190_DS_                        0000027C
_00196_DS_                        0000003C
_00197_DS_                        0000005A
_00199_DS_                        00000076
_00200_DS_                        0000007A
_00204_DS_                        00000082
_00206_DS_                        000000A2
_00226_DS_                        0000006E
_00227_DS_                        000000C0
_00231_DS_                        0000011C
_00235_DS_                        00000178
_00239_DS_                        000001AE
_00241_DS_                        000001BE
_00243_DS_                        000001F4
_00245_DS_                        00000204
_00247_DS_                        0000023A
_00250_DS_                        0000024A
_00275_DS_                        0000008E
_00293_DS_                        00000002
_ADCON0                           00000000
_ADCON0bits                       00000000
_ADCON1                           00000000
_ADCON1bits                       00000000
_ADCON2                           00000000
_ADCON2bits                       00000000
_ADRESH                           00000000
_ADRESL                           00000000
_BAUDCTL                          00000000
_BSR                              00000000
_CCP1CON                          00000000
_CCP1CONbits                      00000000
_CCPR1H                           00000000
_CCPR1L                           00000000
gpasm-0.13.4 beta               user.asm    6-24-2008  22:20:40          PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_ECCPAS                           00000000
_ECCPASbits                       00000000
_EEADR                            00000000
_EECON1                           00000000
_EECON1bits                       00000000
_EECON2                           00000000
_EEDATA                           00000000
_FSR0H                            00000000
_FSR0L                            00000000
_FSR1H                            00000000
_FSR1L                            00000000
_FSR2H                            00000000
_FSR2L                            00000000
_INDF0                            00000000
_INDF1                            00000000
_INDF2                            00000000
_INTCON                           00000000
_INTCON2                          00000000
_INTCON2bits                      00000000
_INTCON3                          00000000
_INTCON3bits                      00000000
_INTCONbits                       00000000
_IPR1                             00000000
_IPR1bits                         00000000
_IPR2                             00000000
_IPR2bits                         00000000
_LATA                             00000000
_LATAbits                         00000000
_LATB                             00000000
_LATBbits                         00000000
_LVDCON                           00000000
_LVDCONbits                       00000000
_OSCCON                           00000000
_OSCCONbits                       00000000
_PCL                              00000000
_PCLATH                           00000000
_PCLATU                           00000000
_PIE1                             00000000
_PIE1bits                         00000000
_PIE2                             00000000
_PIE2bits                         00000000
_PIR1                             00000000
_PIR1bits                         00000000
_PIR2                             00000000
_PIR2bits                         00000000
_PLUSW0                           00000000
_PLUSW1                           00000000
_PLUSW2                           00000000
_PORTA                            00000000
_PORTAbits                        00000000
_PORTB                            00000000
_PORTBbits                        00000000
_POSTDEC0                         00000000
_POSTDEC1                         00000000
gpasm-0.13.4 beta               user.asm    6-24-2008  22:20:40          PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_POSTDEC2                         00000000
_POSTINC0                         00000000
_POSTINC1                         00000000
_POSTINC2                         00000000
_PR2                              00000000
_PREINC0                          00000000
_PREINC1                          00000000
_PREINC2                          00000000
_PRODH                            00000000
_PRODL                            00000000
_RCON                             00000000
_RCONbits                         00000000
_RCREG                            00000000
_RCSTA                            00000000
_RCSTAbits                        00000000
_SPBRG                            00000000
_SPBRGH                           00000000
_STATUS                           00000000
_STATUSbits                       00000000
_STKPTR                           00000000
_STKPTRbits                       00000000
_T0CON                            00000000
_T1CON                            00000000
_T1CONbits                        00000000
_T2CON                            00000000
_T2CONbits                        00000000
_T3CON                            00000000
_T3CONbits                        00000000
_TABLAT                           00000000
_TBLPTRH                          00000000
_TBLPTRL                          00000000
_TBLPTRU                          00000000
_TMR0H                            00000000
_TMR0L                            00000000
_TMR1H                            00000000
_TMR1L                            00000000
_TMR2                             00000000
_TMR3H                            00000000
_TMR3L                            00000000
_TOSH                             00000000
_TOSL                             00000000
_TOSU                             00000000
_TRISA                            00000000
_TRISAbits                        00000000
_TRISB                            00000000
_TRISBbits                        00000000
_TXREG                            00000000
_TXSTA                            00000000
_TXSTAbits                        00000000
_WDTCON                           00000000
_WDTCONbits                       00000000
_WREG                             00000000
__18F1320                         00000001
__gptrget1                        00000000
gpasm-0.13.4 beta               user.asm    6-24-2008  22:20:40          PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
__moduchar                        00000000
_check_brightness                 00000000
_check_for_keypresses             00000000
_clear_secs                       00000000
_dec_hours                        00000000
_delay10tcy                       00000000
_display_digits_real              00000000
_display_time                     00000000
_do_user                          00000000
_dot1                             00000000
_eeprom_data                      00000000
_hours_debounce                   00000000
_inc_hours                        00000000
_inc_mins                         00000000
_init_display                     00000000
_init_user                        00000000
_mins_debounce                    00000000
_mode                             00000000
_save_eeprom_fully                00000000
_secs_debounce                    00000000
_silly_hour_display               00000000
_time_hours                       00000000
_time_mins                        00000000
_time_secs                        00000000
_time_tics                        00000000
_to_bcd                           00000000
_trigger_save_eeprom              00000000
r0x00                             00000000
r0x01                             00000001
r0x02                             00000002
r0x03                             00000003
r0x04                             00000004
r0x05                             00000005
r0x06                             00000006


Errors   :       0
Warnings :       0 reported,       0 suppressed
Messages :       0 reported,       0 suppressed

